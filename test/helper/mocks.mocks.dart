// Mocks generated by Mockito 5.4.6 from annotations
// in list_dynamic/test/helper/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:list_dynamic/core/helpers/internet_chek.dart' as _i7;
import 'package:list_dynamic/core/service/database_helper.dart' as _i6;
import 'package:list_dynamic/model/form_model.dart' as _i2;
import 'package:list_dynamic/repo/repository_form.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFormModel_0 extends _i1.SmartFake implements _i2.FormModel {
  _FakeFormModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabase_1 extends _i1.SmartFake implements _i3.Database {
  _FakeDatabase_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FormRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFormRepository extends _i1.Mock implements _i4.FormRepository {
  MockFormRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FormModel get formModel =>
      (super.noSuchMethod(
            Invocation.getter(#formModel),
            returnValue: _FakeFormModel_0(this, Invocation.getter(#formModel)),
          )
          as _i2.FormModel);

  @override
  _i5.Future<_i2.FormModel> fetchFormData() =>
      (super.noSuchMethod(
            Invocation.method(#fetchFormData, []),
            returnValue: _i5.Future<_i2.FormModel>.value(
              _FakeFormModel_0(this, Invocation.method(#fetchFormData, [])),
            ),
          )
          as _i5.Future<_i2.FormModel>);

  @override
  _i5.Future<void> submitFormData(
    Map<String, dynamic>? fields, {
    String? collectionName = 'submittedForms',
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #submitFormData,
              [fields],
              {#collectionName: collectionName},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i6.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Database> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i5.Future<_i3.Database>.value(
              _FakeDatabase_1(this, Invocation.getter(#database)),
            ),
          )
          as _i5.Future<_i3.Database>);

  @override
  _i5.Future<int> insertData(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#insertData, [data]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<Map<String, dynamic>>> getAllData() =>
      (super.noSuchMethod(
            Invocation.method(#getAllData, []),
            returnValue: _i5.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i5.Future<List<Map<String, dynamic>>>);

  @override
  _i5.Future<void> syncUnsentData() =>
      (super.noSuchMethod(
            Invocation.method(#syncUnsentData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [IInternetCheck].
///
/// See the documentation for Mockito's code generation for more information.
class MockIInternetCheck extends _i1.Mock implements _i7.IInternetCheck {
  MockIInternetCheck() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> hasInternet() =>
      (super.noSuchMethod(
            Invocation.method(#hasInternet, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}
