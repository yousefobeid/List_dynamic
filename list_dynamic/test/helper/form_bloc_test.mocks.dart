// // Mocks generated by Mockito 5.4.6 from annotations
// // in list_dynamic/test/form_bloc_test.dart.
// // Do not manually edit this file.

// // ignore_for_file: no_leading_underscores_for_library_prefixes
// import 'dart:async' as _i4;

// import 'package:list_dynamic/model/form_model.dart' as _i2;
// import 'package:list_dynamic/repo/repository_form.dart' as _i3;
// import 'package:mockito/mockito.dart' as _i1;

// // ignore_for_file: type=lint
// // ignore_for_file: avoid_redundant_argument_values
// // ignore_for_file: avoid_setters_without_getters
// // ignore_for_file: comment_references
// // ignore_for_file: deprecated_member_use
// // ignore_for_file: deprecated_member_use_from_same_package
// // ignore_for_file: implementation_imports
// // ignore_for_file: invalid_use_of_visible_for_testing_member
// // ignore_for_file: must_be_immutable
// // ignore_for_file: prefer_const_constructors
// // ignore_for_file: unnecessary_parenthesis
// // ignore_for_file: camel_case_types
// // ignore_for_file: subtype_of_sealed_class

// class _FakeFormModel_0 extends _i1.SmartFake implements _i2.FormModel {
//   _FakeFormModel_0(Object parent, Invocation parentInvocation)
//     : super(parent, parentInvocation);
// }

// /// A class which mocks [FormRepository].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockFormRepository extends _i1.Mock implements _i3.FormRepository {
//   MockFormRepository() {
//     _i1.throwOnMissingStub(this);
//   }

//   @override
//   _i2.FormModel get formModel =>
//       (super.noSuchMethod(
//             Invocation.getter(#formModel),
//             returnValue: _FakeFormModel_0(this, Invocation.getter(#formModel)),
//           )
//           as _i2.FormModel);

//   @override
//   _i4.Future<_i2.FormModel> fetchFormData() =>
//       (super.noSuchMethod(
//             Invocation.method(#fetchFormData, []),
//             returnValue: _i4.Future<_i2.FormModel>.value(
//               _FakeFormModel_0(this, Invocation.method(#fetchFormData, [])),
//             ),
//           )
//           as _i4.Future<_i2.FormModel>);

//   @override
//   _i4.Future<void> submitFormData(
//     Map<String, dynamic>? fields, {
//     String? collectionName = 'submittedForms',
//   }) =>
//       (super.noSuchMethod(
//             Invocation.method(
//               #submitFormData,
//               [fields],
//               {#collectionName: collectionName},
//             ),
//             returnValue: _i4.Future<void>.value(),
//             returnValueForMissingStub: _i4.Future<void>.value(),
//           )
//           as _i4.Future<void>);
// }
